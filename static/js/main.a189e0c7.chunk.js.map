{"version":3,"sources":["data.js","App.js","index.js"],"names":["data","name","skills","description","img","links","source","demo","socialLink","icon","link","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","selectProject","index","setState","selectedProject","renderSocialIcons","social","react_default","a","createElement","href","className","concat","aria-hidden","renderProjects","project","state","src","alt","map","skill","rel","target","Fragment","_this2","type","onKeyDown","bind","onClick","length","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"oMAAaA,EAAO,CACnB,CACCC,KAAM,mBACNC,OAAQ,CAAC,QAAS,aAAc,iBAChCC,YAAa,mSACbC,IAAK,CAAC,kCAAmC,mCACzCC,MAAO,CACNC,OAAQ,gDACRC,KAAM,iDAGR,CACCN,KAAM,eACNC,OAAQ,CAAC,QAAS,YAAa,oBAC/BC,YAAa,+cACbC,IAAK,CAAC,kCAAmC,mCACzCC,MAAO,CACNC,OAAQ,kDACRC,KAAM,mDAGR,CACCN,KAAM,eACNC,OAAQ,CAAC,QAAS,aAClBC,YAAa,yVACbC,IAAK,CAAC,kCAAmC,mCACzCC,MAAO,CACNC,OAAQ,mDACRC,KAAM,oDAGR,CACCN,KAAM,kBACNC,OAAQ,CAAC,QAAS,qBAAsB,kBAAmB,eAC3DC,YAAa,8SACbC,IAAK,CAAC,kCAAmC,mCACzCC,MAAO,CACNC,OAAQ,yCACRC,KAAM,2CAGR,CACCN,KAAM,eACNC,OAAQ,CAAC,QAAS,aAAc,YAAa,gBAAiB,UAC9DC,YAAa,4SACbC,IAAK,CAAC,kCAAmC,mCACzCC,MAAO,CACNC,OAAQ,yCACRC,KAAM,0CAGR,CACCN,KAAM,WACNC,OAAQ,CAAC,SACTC,YAAa,sPACbC,IAAK,CAAC,kCAAmC,mCACzCC,MAAO,CACNC,OAAQ,wCACRC,KAAM,yCAuBR,CACCN,KAAM,UACNC,OAAQ,CAAC,OAAQ,MAAO,cACxBC,YAAa,uNACbC,IAAK,CAAC,kCAAmC,mCACzCC,MAAO,CACNC,OAAQ,uDACRC,KAAM,4CAeIC,EAAa,CACzB,CACCC,KAAM,YACNC,KAAM,8BAEP,CACCD,KAAM,aACNC,KAAM,8BCkDOC,cA5Jb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAORQ,cAAgB,SAACC,GACfR,EAAKS,SAAS,CACZC,gBAAiBF,KAVFR,EAcnBW,kBAAoB,SAAAC,GAAM,OACxBC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGC,KAAMJ,EAAOf,MACdgB,EAAAC,EAAAC,cAAA,KAAGE,UAAS,MAAAC,OAAQN,EAAOhB,MAAQuB,cAAY,YAjBlCnB,EAsBnBoB,eAAiB,SAACC,EAASb,GAAU,IAE3BE,EAAoBV,EAAKsB,MAAzBZ,gBAER,OACEG,EAAAC,EAAAC,cAAA,OAAKE,UAAS,gBAAAC,OAAkBR,IAAoBF,EAAQ,OAAS,KACnEK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,OACEE,UAAU,6BACVM,IAAKF,EAAQ9B,IAAKiC,IAAKH,EAAQjC,OACjCyB,EAAAC,EAAAC,cAAA,OACEE,UAAU,4BACVM,IAAKF,EAAQ9B,IAAI,GAAIiC,IAAKH,EAAQjC,QAEtCyB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAaI,EAAQjC,MACnCyB,EAAAC,EAAAC,cAAA,UACGM,EAAQhC,OAAOoC,IAAI,SAAAC,GAAK,OACvBb,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SACZJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,cAAcS,OAKjCb,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBACVI,EAAQ/B,aAEXuB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACK,gBAAjBI,EAAQjC,KAAyByB,EAAAC,EAAAC,cAAA,KAAGC,KAAMK,EAAQ7B,MAAMC,OAAQwB,UAAU,SAASU,IAAI,sBAAsBC,OAAO,UAAnF,eAA8Gf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,MAChJhB,EAAAC,EAAAC,cAAA,KAAGC,KAAMK,EAAQ7B,MAAME,KAAMuB,UAAU,iBAAiBU,IAAI,sBAAsBC,OAAO,UAAzF,eAhDR5B,EAAKsB,MAAQ,CACXZ,gBAAiB,GAJFV,wEA2DV,IAAA8B,EAAA3B,KACCO,EAAoBP,KAAKmB,MAAzBZ,gBAER,OACEG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,iCACjBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,0BAAd,aACAJ,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iBAAb,uBAEFJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,kBACXtB,EAAW8B,IAAItB,KAAKQ,sBAI3BE,EAAAC,EAAAC,cAAA,WAASE,UAAU,qCACjBJ,EAAAC,EAAAC,cAAA,UACG5B,EAAKsC,IAAI,SAACJ,EAASb,GAAV,OAAoBK,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQgB,KAAK,SAASd,UAAS,GAAAC,OAAKR,IAAoBF,EAAQ,YAAc,IAAMwB,UAAWF,EAAKvB,cAAc0B,KAAKH,EAAMtB,GAAQ0B,QAASJ,EAAKvB,cAAc0B,KAAKH,EAAMtB,IAASa,EAAQjC,SAC/NyB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQgB,KAAK,SAASd,UAAS,WAAAC,OAAaR,IAAoBvB,EAAKgD,OAAS,EAAI,YAAc,IAAMD,QAAS/B,KAAKI,cAAc0B,KAAK9B,KAAMhB,EAAKgD,OAAS,IAAItB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAb,gBAGvKJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,+BAChBP,IAAoBvB,EAAKgD,OAAS,EAE/BtB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKQ,IAAI,4EAA4EC,IAAI,KACzFX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBACSF,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,wBADT,wBACqFJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,oBADrF,KAGAJ,EAAAC,EAAAC,cAAA,0cAGAF,EAAAC,EAAAC,cAAA,kLAGAF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACZJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,eAAH,4CAGFJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,gBADF,0CAKFJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,eADF,sBAKFJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,gBADF,6BAKFJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,oBADF,eAKFJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,qBADF,0CAKFJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,uBADF,oBAMJJ,EAAAC,EAAAC,cAAA,8EAEEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,2BAMR9B,EAAKsC,IAAItB,KAAKiB,yBArJVgB,aCGlBC,IAASC,OAAOzB,EAAAC,EAAAC,cAACwB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a189e0c7.chunk.js","sourcesContent":["export const data = [\n\t{\n\t\tname: 'KEYBOARD WARRIOR',\n\t\tskills: ['React', 'TypeScript', 'Framer Motion'],\n\t\tdescription: 'Typing practice displays a word which you must then type within a specific interval of time. If the word is incorrectly typed it stays on screen and the time interval remains the same. But when the word is correctly typed a new word is displayed and the time interval is slightly reduced.',\n\t\timg: ['https://i.imgur.com/hXhs49A.jpg', 'https://i.imgur.com/JeQlcpP.jpg'],\n\t\tlinks: {\n\t\t\tsource: 'https://github.com/rickywid/keyboard-warrior/',\n\t\t\tdemo: 'https://rickywid.github.io/keyboard-warrior/'\n\t\t}\n\t},\t\n\t{\n\t\tname: 'XE CONVERTER',\n\t\tskills: ['React', 'Chakra UI', 'Exchangerate API'],\n\t\tdescription: 'A currency converter is used to convert an amount in one currency to its corresponding value in another currency using their current exchange rate, for example it can be used to calculate the value of 100 US Dollars in Euros. Current exchange rates are usually provided by banks and other financial service providers, they also (in some cases) offer free and paid APIs for developers to get current and historical exchange rates between two or more currencies.',\n\t\timg: ['https://i.imgur.com/n1mltzf.jpg', 'https://i.imgur.com/lzwNnyu.jpg'],\n\t\tlinks: {\n\t\t\tsource: 'https://github.com/rickywid/currency-converter/',\n\t\t\tdemo: 'https://rickywid.github.io/currency-converter/'\n\t\t}\n\t},\n\t{\n\t\tname: 'ONLINE STORE',\n\t\tskills: ['React', 'Chakra UI'],\n\t\tdescription: 'Simple Online Store is a basic version of what you might normally see on an e-commerce site. Users will be able to view a list of products and their information, add an item to their shopping cart and increase/decrease the item\\'s quantity before purchasing. After they will be able to place their order and will receive a confirmation number.',\n\t\timg: ['https://i.imgur.com/gBXF5tm.png', 'https://i.imgur.com/T2jDRBR.jpg'],\n\t\tlinks: {\n\t\t\tsource: 'https://github.com/rickywid/simple-online-store/',\n\t\t\tdemo: 'https://rickywid.github.io/simple-online-store/'\n\t\t}\n\t},\n\t{\n\t\tname: 'FORECAST FINDER',\n\t\tskills: ['React', 'OpenWeatherMap API', 'Google Maps API', 'Material UI'],\n\t\tdescription: 'An application to search weather information for a given city. Users have the ability to search and save cities to their favourites list, view the five day forecase along with a weather description, toggle between Celcius and Farenheit temperatures and displaying the city\\'s location on Google Maps.',\n\t\timg: ['https://i.imgur.com/3IE9eCq.jpg', 'https://i.imgur.com/0B7LtM1.jpg'],\n\t\tlinks: {\n\t\t\tsource: 'https://github.com/rickywid/weather-v2',\n\t\t\tdemo: 'https://rickywid.github.io/weather-v2/'\n\t\t}\n\t},\n\t{\n\t\tname: 'SPOOKY NOTES',\n\t\tskills: ['React', 'TypeScript', 'Chakra UI', 'Framer Motion', 'Marked'],\n\t\tdescription: 'A note taking application to help keep you manage all of your important tasks. Users can create, edit, delete a note and assign a priority level. Users can also edit their notes using Markdown formatting. This application was built around Halloween time so I wanted to design a Halloween UI theme.',\n\t\timg: ['https://i.imgur.com/hLY0hSa.jpg', 'https://i.imgur.com/QWsCRVv.jpg'],\n\t\tlinks: {\n\t\t\tsource: 'https://github.com/rickywid/notes-app/',\n\t\t\tdemo: 'https://rickywid.github.io/notes-app/'\n\t\t}\n\t},\n\t{\n\t\tname: 'POMODORO',\n\t\tskills: ['React'],\n\t\tdescription: 'The Pomodoro Technique is a time management method developed by Francesco Cirillo in the late 1980s. The technique uses a timer to break down work into intervals, traditionally 25 minutes in length, separated by short breaks - 5 or 10 minutes.',\n\t\timg: ['https://i.imgur.com/gXdRG9z.jpg', 'https://i.imgur.com/LCIEVFB.png'],\n\t\tlinks: {\n\t\t\tsource: 'https://github.com/rickywid/pomodoro/',\n\t\t\tdemo: 'https://rickywid.github.io/pomodoro/'\n\t\t}\n\t},\n\t// {\n\t// \tname: 'REDDITU',\n\t// \tskills: ['React', 'Heroku', 'Postgres', 'Reddit API'],\n\t// \tdescription: 'A web app based on the Reddit API where users can add and customize all of their favourite subreddits. The web application is intended to save some time by not having to navigate between individual subreddit pages but instead having everything in one place. Users can customize their list and categorize their subreddits to keep everything organized and easily acccessible.',\n\t// \timg: 'https://imgur.com/4LLAeRN.jpeg',\n\t// \tlinks: {\n\t// \t\tsource: 'https://github.com/rickywid/reddit-v3',\n\t// \t\tdemo: 'https://redditu.herokuapp.com/'\n\t// \t}\n\t// },\n\t// {\n\t// \tname: 'FOUNDIT',\n\t// \tskills: ['HTML', 'SCSS', 'JavaScript', 'React', 'Heroku', 'Postgres', 'CircleCI'],\n\t// \tdescription: 'A full stack application where users can visit to post lost or found items. The purpose of FoundIt is to create an online listings where users can come to find their lost possessions. While building this project I also knowledge on how to automate deployment using CircleCI while furthering my knowledge on both the front end and back end.',\n\t// \timg: 'https://i.imgur.com/MQQmUo8.jpg',\n\t// \tlinks: {\n\t// \t\tsource: 'https://github.com/projectunic0rn/foundit-ui',\n\t// \t\tdemo: 'https://foundit.herokuapp.com/'\n\t// \t}\n\t// },\n\t{\n\t\tname: 'HANGMAN',\n\t\tskills: ['HTML', 'CSS', 'JavaScript'],\n\t\tdescription: 'A recreation of the popular game Hangman using pure HTML, CSS and JavaScript. The purpose of this project was to challenge myself to try to build something without the use of any external libraries or frameworks.',\n\t\timg: ['https://i.imgur.com/PdQiYnQ.jpg', 'https://i.imgur.com/xHTEqI7.jpg'],\n\t\tlinks: {\n\t\t\tsource: 'https://github.com/rickywid/hangman_js/tree/gh-pages',\n\t\t\tdemo: 'https://rickywid.github.io/hangman_js/'\n\t\t}\n\t},\n\t// {\n\t// \tname: 'BOOKSTAX',\n\t// \tskills: ['Styled-Components', 'React-Redux', 'Node', 'Express', 'Heroku', 'Postgres', 'CircleCI', 'PassportJS'],\n\t// \tdescription: 'This is a full stack application where I used React on the front end and Nodejs, Postgres and Heroku on the back end. BookStax allows readers to keep track of the their books by managing their list with a drag and drop UI. Users can view, comment and like other users profiles. Users can login through email or social login via Google or Facebook.',\n\t// \timg: 'https://i.imgur.com/SXVryK7.png',\n\t// \tlinks: {\n\t// \t\tsource: 'https://github.com/rickywid/bookstax',\n\t// \t\tdemo: 'https://bookstax.herokuapp.com/'\n\t// \t}\n\t// }\n]\n\nexport const socialLink = [\n\t{\n\t\ticon: 'fa-github',\n\t\tlink: 'http://github.com/rickywid'\n\t},\n\t{\n\t\ticon: 'fa-codepen',\n\t\tlink: 'http://codepen.io/rickyjw'\n\t}\n]\n\n","import React, { Component } from 'react';\nimport { data, socialLink } from './data';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedProject: 0,\n    };\n  }\n\n  selectProject = (index) => {\n    this.setState({\n      selectedProject: index,\n    });\n  }\n\n  renderSocialIcons = social => (\n    <li>\n      <a href={social.link}>\n        <i className={`fa ${social.icon}`} aria-hidden=\"true\" />\n      </a>\n    </li>\n  )\n\n  renderProjects = (project, index) => {\n\n    const { selectedProject } = this.state;\n\n    return (\n      <div className={`project-name ${selectedProject !== index ? 'hide' : ''}`}>\n        <div className=\"project-images\">\n          <img\n            className=\"project-desktop-screenshot\"\n            src={project.img} alt={project.name} />\n          <img\n            className=\"project-mobile-screenshot\"\n            src={project.img[1]} alt={project.name} />\n        </div>\n        <div className=\"project-detail\">\n          <h3 className=\"highlight\">{project.name}</h3>\n          <ul>\n            {project.skills.map(skill => (\n              <li className=\"skill\">\n                <p className=\"skill-item\">{skill}</p>\n              </li>\n            ))\n            }\n          </ul>\n          <p className=\"project-desc\">\n            {project.description}\n          </p>\n          <div className=\"button-group\">\n            {project.name !== 'CODECONCEPT' ? <a href={project.links.source} className=\"source\" rel=\"noopener noreferrer\" target=\"_blank\">Source Code</a> : <></>}\n            <a href={project.links.demo} className=\"demo highlight\" rel=\"noopener noreferrer\" target=\"_blank\">Website</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n  render() {\n    const { selectedProject } = this.state;\n\n    return (\n      <div className=\"container\">\n        <section className=\"profile animated bounceInDown\">\n          <div className=\"profile-info\">\n            <div className=\"profile-details\">\n              <h2 className=\"profile-name highlight\">Ricky JW </h2>\n              <p>rickyw08@gmail.com</p>\n              <p className=\"profile-title\">Software Developer</p>\n            </div>\n            <ul className=\"profile-social\">\n              {socialLink.map(this.renderSocialIcons)}\n            </ul>\n          </div>\n        </section>\n        <section className=\"projects-nav animated slideInLeft\">\n          <ul>\n            {data.map((project, index) => <li><button type=\"button\" className={`${selectedProject === index ? 'highlight' : ''}`} onKeyDown={this.selectProject.bind(this, index)} onClick={this.selectProject.bind(this, index)}>{project.name}</button></li>)}\n            <li><button type=\"button\" className={`nav-bio ${selectedProject === data.length + 1 ? 'highlight' : ''}`} onClick={this.selectProject.bind(this, data.length + 1)}><p className='highlight'>ABOUT ME</p></button></li>\n          </ul>\n        </section>\n        <section className=\"project animated bounceInUp\">\n          {selectedProject === data.length + 1\n            ? (\n              <div className=\"bio\">\n                <div className=\"bio-inner\">\n                  <img src=\"https://res.cloudinary.com/dzeqj2xv1/image/upload/v1611890124/profile.jpg\" alt=\"\" />\n                  <div>\n                    <p>\n                      I am a <span className=\"highlight\"> Software Developer </span>primarily focusing on<span className=\"highlight\"> Web Development</span>.\n                    </p>\n                    <p>\n                      I graduated with a diploma in IT Networking and began teaching myself programming. Since the start, I've used multiple languages, frameworks, tools and libraries and I still feel I haven't even scratched the surface. I started off learning Front End Development but as I became more comfortable I started exploring more about Back End Development which then lead me to databases, building and designing REST API's, security, deployment and more.\n                    </p>\n                    <p>\n                      When I'm not honing my programming skills, you can catch me watching the Raptors, Leafs or Blue Jays. During the summer time you will see me cycling around the city.\n                    </p>\n                    <ul className=\"bio-skills\">\n                      <li>\n                        <p><span className=\"highlight\">Languages: </span>\n                          HTML, CSS, JavaScript/ES6, Python, Java</p>\n                      </li>\n                      <li>\n                        <p>\n                          <span className=\"highlight\">Frameworks: </span>\n                          React, Node/Express, Spring Boot, MVC\n                        </p>\n                      </li>\n                      <li>\n                        <p>\n                          <span className=\"highlight\">Databases: </span>\n                          Postgres, MongoDB\n                        </p>\n                      </li>\n                      <li>\n                        <p>\n                          <span className=\"highlight\">Deployment: </span>\n                          CircleCI, Heroku, Docker\n                        </p>\n                      </li>\n                      <li>\n                        <p>\n                          <span className=\"highlight\">Source Control: </span>\n                          Git/Github\n                        </p>\n                      </li>\n                      <li>\n                        <p>\n                          <span className=\"highlight\">Test Automation: </span>\n                          Selenium, Jest, React-Testing-Library\n                        </p>\n                      </li>\n                      <li>\n                        <p>\n                          <span className=\"highlight\">Operating Systems: </span>\n                          Linux, Windows\n                        </p>\n                      </li>\n                    </ul>\n                    <p>\n                      If you would like to get in touch, you can contact me via email at\n                      <span className=\"highlight\"> rickyw08@gmail.com</span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            )\n            : data.map(this.renderProjects)\n          }\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.scss';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}